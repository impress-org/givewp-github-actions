name: Build Plugin Pre-Release

on:
    workflow_call:
        inputs:
            plugin_slug:
                type: string
                required: true
            zip_name:
                type: string
                required: true
            install_composer_packages:
                description: 'Whether composer needs to be run as part of the build'
                type: boolean
                required: false
                default: true

jobs:
    build:
        name: Build Plugin Artifact
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v3

            -   name: Install composer dependencies
                uses: php-actions/composer@v6
                if: ${{ inputs.install_composer_packages }}
                with:
                    php_version: 7.4
                    dev: no

            -   uses: actions/setup-node@v3
                with:
                    node-version: '12'

            -   name: Install npm dependencies & build for translation
                run: |
                    npm install -g npm@7
                    npm ci
                    npm run build

            -   name: Generate pot file
                run: |
                    curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                    chmod +x wp-cli.phar
                    mv wp-cli.phar /usr/local/bin/wp
                    php -d xdebug.mode=off "$(which wp)" i18n make-pot ${{github.workspace}} ${{github.workspace}}/languages/${{ inputs.plugin_slug }}.pot --exclude="$(cat .distignore | tr "\n" "," | sed 's/,$/ /' | tr " " "\n"),src/*.js,src/**/*.js,*.js.map,blocks/**/*.js"

            -   name: Generate plugin artifact
                run: |
                    rsync -rc --exclude-from="$GITHUB_WORKSPACE/.distignore" "${GITHUB_WORKSPACE}/" ${{ inputs.plugin_slug }}/ --delete --delete-excluded
                    zip -r "${GITHUB_WORKSPACE}/release.zip" ${{ inputs.plugin_slug }}

            -   name: Upload release asset
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ github.token }}
                with:
                    upload_url: ${{ github.event.release.upload_url }}
                    asset_path: ${{github.workspace}}/release.zip
                    asset_name: ${{ inputs.zip_name }}.zip
                    asset_content_type: application/zip
